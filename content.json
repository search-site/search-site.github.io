{"pages":[{"title":"About","date":"2020-03-19T01:48:23.941Z","path":"about/index.html","text":""},{"title":"Tags","date":"2020-03-19T01:48:23.942Z","path":"tags/index.html","text":""},{"title":"Categories","date":"2020-03-19T01:48:23.942Z","path":"categories/index.html","text":""}],"posts":[{"title":"Test your application","date":"2020-04-05T10:04:47.000Z","path":"wiki/framework7-template/test/","text":"Test your application This page is part of the App Framework Documentation Development serverRun npm run dev to start the development server in the web browser. With CTRL + C, you stop the development server. If the web browser does not open automatically, you have to visit http://localhost:8080 manually. The default port 8080 could be configured with devServerPort. iOS emulatorRun npm run ios to open an iOS emulator with a development build. The iOS emulator requires a macOS device (iMac, macBook, …) and installed Xcode - please read the chapter Software requirements for details. To change the default emulator, you have to open Xcode and configure the default deployment target. Android emulatorRun npm run android to open an Android emulator with a development build. Confirm Gradle sync and removal of older application installations if asked. If you get an error Failed to find ‘JAVA_HOME’ environment variable, you have to install the Java SE SDK first. The Android emulator requires installed Android Studio - please read the chapter Software requirements for details. To change the default emulator, you have to open Android Studio and configure the default deployment target at Tools &gt; Android &gt; AVD Manager. Own deviceTo deploy to your iOS device: Build your application with npm run patch/minor/major (see chapter Build your application) Connect your device to your computer Deploy the latest build to Xcode with npm run xcode Select a team at Signing section Select your device as deployment target Deploy to your device To deploy to your Android device: Build your application with npm run patch/minor/major (see chapter Build your application) Connect your device to your computer Deploy the latest build to Android Studio with npm run studio Select your device as deployment target Deploy to your device Code fixApp Framework fixes your code automatically on each test or build command. To disable this behavior, you can set the configuration parameter fixCodeOnBuild to false. If some findings could not be fixed automatically, they are logged to code-findings.log file. Development Firebase rulesOn each test command, the Firebase database rules are deployed, if devFirebase.deployDevRulesOnTesting is true and devFirebase.databaseURL is not empty. On each test command, the Firebase storage rules are deployed, if devFirebase.deployDevRulesOnTesting is true and devFirebase.storageBucket is not empty. Please read the chapter Firebase backend for details.","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Status bar style","date":"2020-04-04T10:04:47.000Z","path":"wiki/framework7-template/status-bar-style/","text":"Status bar style This page is part of the App Framework Documentation ConfigurationYou can configure the application status bar style in the configuration file: 123statusbarVisibility: true, // true or falsestatusbarTextColor: &apos;white&apos;, // &apos;black&apos; or &apos;white&apos;statusbarBackgroundColor: &apos;#3f51b5&apos;, // Hex color code changeStatusbarBackgroundColorOnThemeColorChange This configuration option was removed with App Framework 1.9.15. You can apply the following code to your app.vue file to have the same behavior: 123456789created() &#123; // Update status bar background and text color after theme color change this.$watch(() =&gt; &#123; return this.$root.color &#125;, (newColor, oldColor) =&gt; &#123; this.$root.statusbarTextColor = newColor === &apos;white&apos; ? &apos;black&apos; : &apos;white&apos; this.$root.statusbarBackgroundColor = newColor === &apos;white&apos; &amp;&amp; window.cordova === undefined ? &apos;000000&apos; : this.$root.colors[this.$root.theme][newColor] &#125;)&#125; Runtime modificationYou can modify the application status bar style in any Vue hook created or later: 12345created: function () &#123; this.$root.statusbarVisibility = true this.$root.statusbarTextColor = &apos;white&apos; this.$root.statusbarBackgroundColor = &apos;#3f51b5&apos;&#125; The current style is restored after application restart and overwrites the configuration. Limitations Changing the status bar visibility is limited to native applications Changing the status bar text color is limited to iOS native applications Changing the status bar background color is limited to native or homescreen applications","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"sortObject function","date":"2020-04-03T10:04:47.000Z","path":"wiki/framework7-template/sort-object/","text":"sortObject function This page is part of the App Framework Documentation To sort an object, for example the result of a Firebase query, you can use the following function, which is attached to the window object. window.sortObject(obj, sortBy, sortDesc) obj: Object to sort sortBy: Property to take for sorting sortDesc: undefined or ‘desc’ 1234567891011121314let objUnsorted = &#123; keyA: &#123; name: &apos;Berta&apos;, age: 25 &#125;, keyB: &#123; name: &apos;Aaron&apos;, age: 40 &#125;, keyC: &#123; name: `Charlie`, age: 30 &#125;&#125; Sort by name ascending: 123456let objSortedByName = window.sortObject(objUnsorted, &apos;name&apos;)&#123; keyB: &#123; name: &apos;Aaron&apos;, age: 40 &#125;, keyA: &#123; name: &apos;Berta&apos;, age: 25 &#125;, keyC: &#123; name: `Charlie`, age: 30 &#125;&#125; Sort by age descending: 123456let objSortedByAgeDesc = window.sortObject(objectUnsorted, &apos;age&apos;, &apos;desc&apos;)&#123; keyB: &#123; name: &apos;Aaron&apos;, age: 40 &#125;, keyC: &#123; name: `Charlie`, age: 30 &#125;, keyA: &#123; name: &apos;Berta&apos;, age: 25 &#125; &#125; For more complex data manipulation you can think about the integration of Underscore.js or Lodash. Please see the chapter Modules and Scripts for details","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"State restoration","date":"2020-04-02T10:04:47.000Z","path":"wiki/framework7-template/state-restoration/","text":"State restoration This page is part of the App Framework Documentation After an application switch or closure, the application state may be reset. This means, if your user changed the page or tab, scrolled, opened modals, put in some data before - everything will be gone. App Framework has an automatic state restoration on each application restart, to let your users continue with the same application state they have had before they left the application. This restoration includes the following elements: URL history per view (requires unique class or ID attribute per view) Selected tabs (requires unique ID attribute per page) Scroll positions Side panels Action sheets (requires unique ID attribute) Login screens (requires unique ID attribute) Pickers (requires unique ID attribute) Popups (requires unique ID attribute) Form inputs (requires unique form ID attribute and unique NAME attributes per form) Focus on form input (requires unique form ID attribute and unique NAME attributes per form) Page component data The state is not restored for standard modals, popovers and code-generated modals. If you use v-model on an input, the state will be restored by page component data, you can use a name attribute to restore the form focus, but it is not required in this case to restore form input. URL history per viewWith App Framework &gt; 1.9.0. and configuration setting restoreHistory: false, only the last URL per view will be restored. This solves issues where pages have been loaded several times in the DOM. But you have to take care now to assign a href or back-link-url property to each backlink, as described in the Framework7-Vue documentation for links or navbars. Page component dataWith App Framework &gt; 1.11.0 you can disable the page component data restoration with restoreComponentData: false in the configuration file.","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Software requirements","date":"2020-04-01T10:04:47.000Z","path":"wiki/framework7-template/software/","text":"Software requirements This page is part of the App Framework Documentation Before you start to work with App Framework, you need to install some free available softare. AtomFirst of all, you need a code editor. We really recommend Atom, which is open source, supports correct syntax highlighting and is available for macOS, Windows and Linux. Download from Atom.io the right installer for your operating system Install Atom and open it afterwards Select the Welcome tab, disable the checkbox Show welcome guide when opening Atom and close the tab Select the Telemetry Consent tab and decide whether you want to send statistics or not to Atom Open from the top menu File &gt; Settings and select in the left menu Install Search for package language-vue-component and click on install Search for package linter-eslint and click on install Search for package editorconfig and click on install Close the settings tab and Atom itself Node.jsTo run the App Framework scripts and the development server, you need to install Node.js, which is available for macOS, Windows and Linux and is free of charge. You can install it with the default settings. XcodeXcode is optional. You need it, if you want to publish your application to the Apple App Store. You can install Xcode only to macOS machines, like iMac or macBook. You can download Xcode free of charge from the macOS App Store. Android StudioAndroid Studio is optional. You need it, if you want to publish your application to the Google Play Store. It is available free of charge for macOS, Windows and Linux. To ensure you install Android Studio and its SDK properly, please read the official installation guide. On LinuxPlease take care to unpack Android Studio to one of the following locations to ensure that App Framework will find the studio.sh file: /bin/android-studio/bin/studio.sh /opt/android-studio/bin/studio.sh /usr/bin/android-studio/bin/studio.sh /usr/local/android-studio/bin/studio.sh /usr/local/bin/android-studio/bin/studio.sh GitHub desktop clientThe GitHub desktop client is optional. We recommend it as a Git client, because GitHub is great for collaboration or as a backup for your own code. The desktop client is available for macOS and Windows and is free of charge. Create an account on GitHub.com Download from GitHub.com the right installer for your operating system Install the GitHub desktop client and log in with your credentials Configure your user name and a email address under which you will commit to GitHub Close the GitHub desktop client RebootAt the end of the installation process, you should reboot your computer.","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Setup your project","date":"2020-03-31T10:04:47.000Z","path":"wiki/framework7-template/setup/","text":"Setup your project This page is part of the App Framework Documentation InstallationCreating a new application project my-app is easily done in the following four steps: Run mkdir my-app to create a new folder my-app Run cd my-app to open the folder my-app Run echo {} &gt; package.json to create a package.json file Run npm install --save-dev app-framework@1 to install App Framework and its dependencies create the project folder structure complete the package.json file After the installation process finished, you should see this folder structure. You can run npm run dev to see if your new app opens in the browser. UpdateIf there is a newer version of App Framework available at the npm repository, there will be an alert at the development server. You have to update App Framework per application project by running npm update --save-dev app-framework. NotesThe proper way to install the App Framework is to include it as a dev-dependency in your app’s package.json file, i.e. it must be installed as a module, and not cloned as a repo. The npm install command will generate the appropriate directories in your app’s root directory, and will add the relevant scripts to your app’s package.json file.","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Routing","date":"2020-03-30T10:04:47.000Z","path":"wiki/framework7-template/routing/","text":"Routing This page is part of the App Framework Documentation App Framework completes and checks the app/routes.json file automatically on any test or build command for you. To disable the completion, set completeRoutesFile: false in the configuration file. App Framework supports all possibilities for nested routing, described for Framework7-Vue. You have to take care for the following rules when you name your pages/ … .vue files: Lowercase and hyphen-type: your-new-page.vue (allowed: [0-9a-z-]) An underscore indicates tab routes: your-new-page_tab1.vue Two underscores indicates alternate tab routes: your-new-page_tab1_alternate.vue Pages in sub folders pages/sub-folder/… .vue are supported. Sub folders do not have any impact to the route structure but let your organize your page components better. As an example, if you have the following page components: pages/tabs.vue pages/tabs_tab1.vue pages/tabs_tab2.vue pages/tabs_tab2_alternate.vue pages/tabs_tab3.vue App Framework generates the following routes: 123456789101112131415161718192021222324252627&#123; &quot;path&quot;: &quot;/tabs/&quot;, &quot;component&quot;: &quot;tabs.vue&quot;, &quot;tabs&quot;: [ &#123; &quot;path&quot;: &quot;/tab1/&quot;, &quot;tabId&quot;: &quot;tab1&quot;, &quot;component&quot;: &quot;tabs_tab1.vue&quot; &#125;, &#123; &quot;path&quot;: &quot;/tab2/&quot;, &quot;tabId&quot;: &quot;tab2&quot;, &quot;component&quot;: &quot;tabs_tab2.vue&quot;, &quot;routes&quot;: [ &#123; &quot;path&quot;: &quot;/alternate/&quot;, &quot;component&quot;: &quot;tabs_tab2_alternate.vue&quot; &#125; ] &#125;, &#123; &quot;path&quot;: &quot;/tab3/&quot;, &quot;tabId&quot;: &quot;tab3&quot;, &quot;component&quot;: &quot;tabs_tab3.vue&quot; &#125; ]&#125; For dynamic routes, you have to add them manually to the routes.json file. Example: 1234&#123; &quot;path&quot;: &quot;/flexible-routing/blog/:blogId/post/:postId/&quot;, &quot;component&quot;: &quot;flexible-routing.vue&quot;&#125; To protect routes and require user authentication before, just add login: true as a property. Example: 1234567891011121314151617181920212223&#123; &quot;path&quot;: &quot;/tabs/&quot;, &quot;component&quot;: &quot;tabs.vue&quot;, &quot;login&quot;: true, &quot;tabs&quot;: [ &#123; &quot;path&quot;: &quot;/tab1/&quot;, &quot;tabId&quot;: &quot;tab1&quot;, &quot;component&quot;: &quot;tabs_tab1.vue&quot; &#125;, &#123; &quot;path&quot;: &quot;/tab2/&quot;, &quot;tabId&quot;: &quot;tab2&quot;, &quot;component&quot;: &quot;tabs_tab2.vue&quot;, &quot;login&quot;: true &#125;, &#123; &quot;path&quot;: &quot;/tab3/&quot;, &quot;tabId&quot;: &quot;tab3&quot;, &quot;component&quot;: &quot;tabs_tab3.vue&quot; &#125; ]&#125; In the example above, /tabs/ and /tabs/tab2/ require login, /tabs/tab1/ and /tabs/tab3/ not. Login protection for all pagesYou can save time and enable login protection for all pages in the app/config.json file with loginRequiredForAllPages: true. WorkaroundsTo solve Framework7 / Framework7-Vue behavior: Load two flexible routes after another: https://github.com/scriptPilot/app-framework/issues/597 Avoid multiple pages in DOM with non-linear navigation: https://github.com/scriptPilot/app-framework/issues/632","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Page components","date":"2020-03-29T10:04:47.000Z","path":"wiki/framework7-template/page-components/","text":"Page components This page is part of the App Framework Documentation The structure of each page component is defined in a Framework7-Vue component, so you should be familar with Vue.js single file components as well as Framework7-Vue. File namingFor page component naming, please read the chapter Routing. StructureA basic page component could look like this app/pages/home.vue file: 12345678&lt;template&gt; &lt;f7-page&gt; &lt;f7-navbar title=&quot;Home Page&quot; /&gt; &lt;f7-block&gt; Welcome to your App! &lt;/f7-block&gt; &lt;/f7-page&gt;&lt;/template&gt; Please read the Framework7-Vue documentation for page component structure details. To add CSS, you use the style block: 1234567 ...&lt;/template&gt;&lt;style&gt; .content-block &#123; color: red; &#125;&lt;/style&gt; To scope the style only for that page component, use &lt;style scoped&gt;. And to add functionality, you use the script block: 12345678910 ...&lt;script&gt; export default &#123; methods: &#123; onF7Init: function () &#123; this.$f7.alert(&apos;Page is mounted!&apos;) &#125; &#125; &#125;&lt;/script&gt; Babel / ES2015 is supported in page components.","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Modules and Scripts","date":"2020-03-28T10:04:47.000Z","path":"wiki/framework7-template/modules-and-scripts/","text":"Modules and Scripts This page is part of the App Framework Documentation If available, you should prefer npm modules to keep your project folder lightweight. NPM moduleFollow these steps to install and use a module from the npm repository: Install module with npm install --save-dev &lt;package_name&gt; Import module at the beginning of the script block with import &lt;var_name&gt; from &#39;&lt;package_name&gt;&#39; Example: npm install --save-dev underscore 123456789101112&lt;script&gt; import _ from &apos;underscore&apos; export default &#123; mounted: function () &#123; let numbers = [1, 4, 34, 145] window.f7.alert(&apos;In my list are &apos; + _.size(numbers) + &apos; numbers!&apos;) &#125; &#125; &lt;/script&gt; Local moduleFollow these steps to use a local module (.js / .vue / .json): If not exists, create a folder vendor Save the module to vendor/. Import the module at the beginning of the script block with import &lt;var_name&gt; from &#39;../../vendor/&lt;module_name&gt;&#39; Example: vendor/underscore.js 123456789101112&lt;script&gt; import _ from &apos;../../vendor/underscore&apos; export default &#123; mounted: function () &#123; let numbers = [1, 4, 34, 145] window.f7.alert(&apos;In my list are &apos; + _.size(numbers) + &apos; numbers!&apos;) &#125; &#125; &lt;/script&gt; Because all scripts are compressed during the build process, you can prefer development versions.","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Languages Files","date":"2020-03-27T10:04:47.000Z","path":"wiki/framework7-template/language-files/","text":"Languages Files This page is part of the App Framework Documentation Languages files provide a simple way to make your app multi-lingual. StorageLanguage files should be saved in folder app/lang. They should be JSON files with plain key:string pairs. Example: lang/en.json 1234&#123; &quot;emailSubject&quot;: &quot;Greetings from Hamburg&quot;, &quot;emailBody&quot;: &quot;Hello &#123;&#123;username&#125;&#125;!&quot;&#125; lang/de.json 1234&#123; &quot;emailSubject&quot;: &quot;Grüße aus Hamburg&quot;, &quot;emailBody&quot;: &quot;Hallo &#123;&#123;username&#125;&#125;!&quot;&#125; After you added a new language file, the development server should be restarted. UsageIn templates: 1&#123;&#123;$lang(&apos;emailSubject&apos;)&#125;&#125; 1&#123;&#123;$lang(&apos;emailBody&apos;, &#123;username: &apos;Bugs Bunny&apos;&#125;) In scripts: 1this.$lang(&apos;emailSubject&apos;) 1this.$lang(&apos;emailBody&apos;, &#123;username: &apos;Bugs Bunny&apos;&#125;) Default languageTo be configured, for example &quot;defaultLanguage&quot;: &quot;en&quot;. This file is the master file to which all other language files are compared. If there are more keys than in the default language file, an error will be shown on any build command. Default language fallbackTo be configured, by default &quot;defaultLanguageFallback&quot;: false. If set to false, an error will be shown if any key is missing compared to the default language file on any build command. If set to true and a key is missing in a secondary language file, the default language is used.","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Knowledge requirements","date":"2020-03-26T10:04:47.000Z","path":"wiki/framework7-template/knowledge/","text":"Knowledge requirements This page is part of the App Framework Documentation Before you start to work with App Framework, you should be familiar with the following documentation. Essentiell Node.js and npm for command line interface handling Framework7 and Framework7-Vue to develop with HTML and JavaScript Optional Vue.js to make your application state-based and reactive Firebase to use the reliable backend service provider Cordova/PhoneGap to use device hardware API plugins iOS design guidelines and Material design guidelines","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Images","date":"2020-03-25T10:04:47.000Z","path":"wiki/framework7-template/images/","text":"Images This page is part of the App Framework Documentation Image usageTo use images in your application, you have to save them first in the app/images folder and point to them with a relative path in the src attribute. 1234567&lt;template&gt; &lt;f7-page&gt; &lt;f7-block&gt; &lt;img src=&quot;../images/yourImage.jpg&quot; /&gt; &lt;/f7-block&gt; &lt;/f7-page&gt;&lt;/template&gt; To remove images, you should remove the image tag first and delete the file afterwards. Dynamic image usageDuring the build process, all src attributes are parsed by Webpack and mapped to the hashed image files. This does only work, if the src contains a string only - no variables. So, for dynamic images, you should use single img elements and display them or not. The following example shows imageA.png initially and after five seconds imageB.png. 12345678910111213141516171819202122&lt;template&gt; &lt;f7-page&gt; &lt;f7-block&gt; &lt;img src=&quot;../images/imagesA.png&quot; v-if=&quot;image===&apos;imageA&apos;&quot; /&gt; &lt;img src=&quot;../images/imagesB.png&quot; v-else /&gt; &lt;/f7-block&gt; &lt;/f7-page&gt;&lt;/template&gt;&lt;script&gt; export default &#123; data: function () &#123; return &#123; image: &apos;imageA&apos; &#125; &#125;, mounted: function () &#123; setTimeout(() =&gt; &#123; this.image = &apos;imageB&apos; &#125;, 5000) &#125; &#125;&lt;/script&gt; Another solution is, that you require all images in the script: 123456789101112131415161718192021&lt;template&gt; &lt;f7-page&gt; &lt;f7-block&gt; &lt;img :src=&quot;image&quot; /&gt; &lt;/f7-block&gt; &lt;/f7-page&gt;&lt;/template&gt;&lt;script&gt; export default &#123; data: function () &#123; return &#123; image: require(&apos;../images/imageA.png&apos;) &#125; &#125;, mounted: function () &#123; setTimeout(() =&gt; &#123; this.image = require(&apos;../images/imageB.png&apos;) &#125;, 5000) &#125; &#125;&lt;/script&gt; Image preloadingApp Framework provides image preloading by default. This means, all files in the folder app/images are loaded while the preloading page is shown and before the application is initialized. This could increase the initial loading time, but will improve the behavior of your application because all images are immediately visible. To disable image preloading, set preloadImages: false in the configuration file. To use the updated setting, you have to restart the development server. To update the preloader after adding new images to your application, you have to restart the development server as well.","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Image upload component","date":"2020-03-25T10:04:47.000Z","path":"wiki/framework7-template/image-upload-component/","text":"Image upload component This page is part of the App Framework Documentation In native iOS or Android applications, the &lt;input type=&quot;file&quot; /&gt; element does not work. App Framework provides you a component, to upload an image to Firebase storage and save the image URI to the Firebase database. ConfigurationIn the configuration file, you have to add the following Cordova plugins: 1234&quot;useCordovaPlugins&quot;: [ &quot;cordova-plugin-camera&quot;, &quot;cordova-plugin-file&quot;] UsageJust add the following component to any of your page components: 123&lt;f7-block&gt; &lt;image-uploader store=&quot;...&quot; db=&quot;...&quot; size=&quot;...&quot; /&gt;&lt;/f7-block&gt; store is the Firebase storage path to your image (string, no extension) db is the Firebase database path to save the image URI (string, optional) size is the maximum image width or height (number, optional, ratio kept) Please take care that the storage rules and database rules are correctly configured.","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Configure gitignore and npmignore files","date":"2020-03-24T10:04:47.000Z","path":"wiki/framework7-template/ignoreFiles/","text":"Configure .gitignore and .npmignore files This page is part of the App Framework Documentation The .gitignore and .npmignore files are updated automatically, based on a default configuration. You can overwrite this configuration in gitignore and npmignore objects in the app/config.json file. Example: Add a custom folder to the .npmignore file and remove the .editorconfig file 1234&quot;npmignore&quot;: &#123; &quot;customFolder/&quot;: true, &quot;.editorconfig&quot;: false&#125; true means, the path will be listed in the ignore file.","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Icon fonts","date":"2020-03-23T10:04:47.000Z","path":"wiki/framework7-template/icon-fonts/","text":"Icon fonts This page is part of the App Framework Documentation ConfigurationApp Framework is well prepared to use comprehensive icon fonts for your application. To use an icon font, you have to set true in the configuration: 123456&quot;useIconFonts&quot;: &#123; &quot;framework7&quot;: false, &quot;material&quot;: true, &quot;ion&quot;: false, &quot;fontawesome&quot;: false&#125; After you changed the configuration, you have to restart the development server. Each additional icon font will increase your build size. UsageAs an example with Material Design Icons: HTML: &lt;i class=&quot;material-icons&quot;&gt;done&lt;/i&gt; Framework7-Vue: &lt;f7-icon icon=&quot;done&quot; /&gt; Icon overview Framework7 Icons Material Design Icons Ion Icons FontAwesome Icons Legacy supportTo display icon fonts in older browsers and Android versions, App Framework will automatically replace ligatures to code. Currently, this works only for the Material icon fonts. Example: &lt;f7-icon material &quot;done&quot; /&gt; will generate &lt;i class=&quot;material-icons&quot;&gt;&amp;#xE876;&lt;/i&gt;","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Project folder structure","date":"2020-03-22T10:04:47.000Z","path":"wiki/framework7-template/folder-structure/","text":"Project folder structure This page is part of the App Framework Documentation The following project folder will be created by default: 12345678910111213141516171819├── app/ # App source folder│ ├── images/ # App images│ ├── lang/ # App language files│ ├── pages/ # App page components│ ├── app.vue # App main component│ ├── config.js # App configuration│ ├── firebase-database.json # Firebase database rules│ ├── firebase-storage.txt # Firebase storage rules│ ├── icon.png # App icon file (minimum size is 1024 pixel)│ └── routes.json # App routes configuration├── build/ # Latest build files (created after first build, do not modify)├── design/ # Design templates (PDF, Power Point)├── node_modules/ # Installed node modules (do not modify)├── snapshots/ # Project snapshots (for rollback)├── .babelrc # Babel configuration file for ES2015 support (do not modify)├── .gitignore # List of ignored files for Git commits (do not modify)├── .npmignore # List of ignored files for NPM publishing (do not modify)├── package-lock.json # Installation information (do not modify)└── package.json # Project information You can reset your application folder with npm run reset-app - but be careful, this will delete your current app folder!","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Init","date":"2020-03-22T10:04:47.000Z","path":"wiki/Init/","text":"Initsearch용 사이트","tags":[{"name":"Log","slug":"Log","permalink":"https://search-site.github.io/tags/Log/"}],"categories":[{"name":"Log","slug":"Log","permalink":"https://search-site.github.io/categories/Log/"}]},{"title":"Firebase backend","date":"2020-03-21T10:04:47.000Z","path":"wiki/framework7-template/firebase/","text":"Firebase backend This page is part of the App Framework Documentation App Framework is well-prepared to use Firebase as a backend provider. Configuration file: 123456789firebase: &#123; apiKey: &quot;AIzaSyAvzTiqd9fKR-h47Uxl4iXwqSMU1VjGdII&quot;, // Required for Firebase initialization authDomain: &quot;app-framework-9045a.firebaseapp.com&quot;, // Leave blank to disable auth service databaseURL: &quot;https://app-framework-9045a.firebaseio.com&quot;, // Leave blank to disable database service storageBucket: &quot;app-framework-9045a.appspot.com&quot;, // Leave blank to disable storage service projectId: &quot;app-framework-9045a&quot;, // Required for Firebase hosting allowEmailLogin: true, // true or false allowEmailRegistration: true // true or false&#125; Disabling a service will reduce the build size. You can use Firebase in any Vue hook created or later: this.$fireAuth - Shortlink to window.firebase.auth this.$user- Null or object (uid, email, name, photo) this.$fireDB - Shortlink to window.firebase.database().ref this.$fireStore - Shortlink to window.firebase.storage().ref To test your Firebase rules in development, you have the chance to configure a devFirebase project: 12345678910devFirebase: &#123; deployDevRulesOnTesting: false, apiKey: &quot;AIzaSyBL0Xxsc-jFZ2BnmQV08T4O9B56HJVpwXk&quot;, authDomain: &quot;dev-app-framework.firebaseapp.com&quot;, databaseURL: &quot;https://dev-app-framework.firebaseio.com&quot;, storageBucket: &quot;dev-app-framework.appspot.com&quot;, projectId: &quot;dev-app-framework&quot;, allowEmailLogin: true, allowEmailRegistration: true&#125; If you set deployDevRulesOnTesting: true, on each test command (npm run dev, npm run ios and npm run android), the firebase-database.json and firebase-storage.txt files are deployed to your devFirebase project. Firebase sign outIt is quite easy to sign out a user with App Framework from Firebase: &lt;f7-button @click=&quot;$root.$signOut()&quot;&gt;Sign out&lt;/f7-button&gt; ExampleCommon task: Keep some local data in sync with Firebase 1234567891011121314&lt;template&gt; &lt;f7-page&gt; &lt;f7-block&gt;&#123;&#123;$db(&apos;someLocalData&apos;)&#125;&#125;&lt;/f7-block&gt; &lt;/f7-page&gt;&lt;/template&gt;&lt;script&gt; export default &#123; created() &#123; this.$fireDB(&apos;someDataAtFirebase&apos;).on(&apos;value&apos;, (snap) =&gt; &#123; this.$db(&apos;someLocalData&apos;, snap.val()) &#125;) &#125; &#125;&lt;/script&gt;","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Extend the Vue","date":"2020-03-20T10:04:47.000Z","path":"wiki/framework7-template/extend-vue-root-object/","text":"Extend the Vue / Framework7 root object This page is part of the App Framework Documentation In some cases you want to extend the Vue or Framework7 root object. To make App Framework easier for most of the users, the root object is handled in the background. But for advanced users, there is a simple way to extend the root object. All you have to do, is to create a app/vue.js file, which exports a function with one parameter (the Vue object) and returns the modified Vue object: 1234567891011module.exports = (vue) =&gt; &#123; // Example modification vue.mixin(&#123; created () &#123; console.log(&apos;Custom Vue extension works!&apos;) &#125; &#125;) return vue&#125; App Frameworks detects that file automatically, there is no need for further configuration. After creating or deleting the app/vue.js file, you have to run again npm run dev to update the dev server. Own componentsYou can easily create your own reusable Vue components, which are available in the app and all pages later on. Create the app/vue.js file with basic content 1module.exports = (vue) =&gt; vue Create the component app/components/customButton.vue 123456789101112&lt;template&gt; &lt;f7-button @click=&quot;handleCustomButtonClick&quot; raised fill&gt;Custom Button&lt;/f7-button&gt;&lt;/template&gt;&lt;script&gt; export default &#123; methods: &#123; handleCustomButtonClick () &#123; this.$f7.alert(&apos;Yeah, you clicked the button!&apos;) &#125; &#125; &#125;&lt;/script&gt; Add the component in your app/vue.js file 123456const customButton = require(&apos;./components/customButton.vue&apos;)module.exports = (vue) =&gt; &#123; vue.component(&apos;custom-button&apos;, customButton) return vue&#125; Integrate the component in any page or the app component 12345678910&lt;template&gt; &lt;f7-page&gt; &lt;f7-block&gt; &lt;!-- here it is! --&gt; &lt;custom-button /&gt; &lt;/f7-block&gt; &lt;/f7-page&gt;&lt;/template&gt; As you can see, all the Framework7 elements are available for your own component. Overwrite Framework7 optionsIn this file you can modify the Framework7 initialization parameters as well. As an example, we overwrite the preroute() function. 123456789101112131415161718192021222324module.exports = (vue) =&gt; &#123; // Add modification as mixin with created() hook vue.mixin(&#123; created() &#123; // Check for root element if (this === this.$root) &#123; // Overwrite Framework7 preroute this.$options.framework7.preroute = (view, options) =&gt; &#123; console.log(view) console.log(options) console.log(&apos;No further page load now ...&apos;) return false &#125; &#125; &#125; &#125;) return vue&#125;","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Configure eslintrc file","date":"2020-03-19T10:04:47.000Z","path":"wiki/framework7-template/eslintrcFile/","text":"Configure .eslintrc file This page is part of the App Framework Documentation The .eslintrc file will be updated automatically. You can configure it in the eslint object in the app/config.json file. Example: 123456789&quot;eslint&quot;: &#123; &quot;extends&quot;: &quot;airbnb&quot;, &quot;rules&quot;: &#123; &quot;semi&quot;: [ &quot;error&quot;, &quot;never&quot; ] &#125;&#125; Currently, airbnb and standard are available to extend - if you wish to extend another shared configuration, please ask for it in our issue list.","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Configure editorconfig file","date":"2020-03-18T10:04:47.000Z","path":"wiki/framework7-template/editorconfigFile/","text":"Configure .editorconfig file This page is part of the App Framework Documentation The .editorconfig file will be updated automatically. You can configure it in the editorConfig item in the app/config.json file. To write a line without value, for example [*], assign value null, else assign the value as string or number. Example: 1234567891011&quot;editorConfig&quot;: &#123; &quot;root&quot;: &quot;true&quot;, &quot;[*]&quot;: null, &quot;indent_style&quot;: &quot;space&quot;, &quot;indent_size&quot;: 2, &quot;charset&quot;: &quot;utf-8&quot;, &quot;trim_trailing_whitespace&quot;: &quot;true&quot;, &quot;insert_final_newline&quot;: &quot;true&quot;, &quot;end_of_line&quot;: &quot;lf&quot;, &quot;max_line_length&quot;: &quot;null&quot;&#125;","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"App Framework - Documentation","date":"2020-03-17T10:04:47.000Z","path":"wiki/framework7-template/DOCUMENTATION/","text":"App Framework - DocumentationIntroductionApp Framework supports your whole workflow to create amazing iOS and Material Apps with HTML, JavaScript and CSS. All the tricky stuff, which has to be done for each application, is done by App Framework. You could spend your time on what makes your App special. To become comfortable with App Framework, you should check the requirements first, follow the workflow step by step afterwards and use the reference as a quick refresher later on. If you want to contribute to App Framework itself, please read the contribution chapters. For any open question, feature request or bug, please use our issue list. Requirements Knowledge requirements Software requirements Workflow Setup your project Configure .editorconfig file Configure .eslintrc file Configure .gitignore and .npmignore files Design your application Develop your application App component Page components Routing Global data object sortObject function Language files Images Icon fonts Extend Vue root object / own components / Framework7 init options Modules and scripts Cordova plugins Cordova preferences Firebase backend Image upload component State restoration Application style Status bar style Test your application Build your application Deploy your application Backup your project Reference Project folder structure Configuration options CLI commands Changelog ContributionThese chapters are only for contributors of App Framework itself. Requirements Way of working Folder structure Coding rules Trouble shooting Update vendor folder","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Way of working","date":"2020-03-16T10:04:47.000Z","path":"wiki/framework7-template/dev-way-of-working/","text":"Way of working This page is part of the App Framework Documentation ChangesFor each change to App Framework code, please follow these steps: Create an issue Will be categorized as “new feature”, “bug” or “improvement” Should be discussed for new features Create a branch Should be named “feature-123”, “fix-123” or “enhancement-123” where 123 is the issue number Develop the solution Update the postinstall routine to apply changes to previous versions On variables change, check dependencies in source code On file change, check dependencies in source code Test the solution On macOS / Windows / Linux after changes to scripts folder On iOS / Android / Web after changes to client or demo folder With a new / updated project after changes to the postinstall routine Update the documentation Features in file README.md Documentation in folder docs Commit the branch as a pull request Pull requestsFor each new pull request, please follow these steps: Verify the testing Discuss findings in the pull request Verify the documentation update Discuss findings in the pull request Merge the pull request and delete the branch Add the issue in file CHANGELOG.md for the next version Close the issue with reference to the pull request ReleasesFor each release, please follow these steps: Build a new App Framework version and commit it to GitHub Run npm run patch after bug-fixes and improvements (version bump to x.y.z+1) Run npm run minor after adding new functionality (version bump to x.y+1.0) Run npm run major after breaking backward-capability (version bump to x+1.0.0) Update the version with release date in file CHANGELOG.md and commit it to GitHub Publish to the npm repository with npm publish Deploy new Demo App version to Firebase hosting with npm run firebase to Google Play Store, update all information before commit (read documentation) to Apple App Store, update all information before commit (read documentation) Update external documentation Framework7-Vue: Overview Framework7-Vue: Starter App Templates Promote new version","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Update vendor folder","date":"2020-03-15T10:04:47.000Z","path":"wiki/framework7-template/dev-update-vendor-folder/","text":"Update vendor folder This page is part of the App Framework Documentation Framework7To be able to use the newest master branch of Framework7 and let developers use their modified Framework7 build, it is shipped directly with App Framework in the vendor folder. To update Framework7 in the vendor folder: Clone Framework7 repo in Framework7 folder next to app-framework folder Run npm install in Framework7 folder Run npm run f7 in app-framework folder The kitchen sink files in the demo folder and the client/theme-colors.json file are updated as well. Framework7-VueTo be able to use the newest master branch of Framework7-Vue and let developers use their modified Framework7-Vue build, it is shipped directly with App Framework in the vendor folder. To update Framework7-Vue in the vendor folder: Clone Framework7-Vue repo in Framework7-Vue folder next to app-framework folder Run npm install in Framework7-Vue folder Run npm run f7vue in app-framework folder Material Design IconsTo avoid the need to install the huge Material Design Icons archive and to get the mapping between ligatures and codepoints, it is shipped directly with App Framework in the vendor folder. To update Material Design Icons in the vendor folder: Clone Material Design Icons repo in material-design-icons folder next to app-framework folder Run npm run iconfonts in app-framework folder The client/material-codepoints.json file is updated as well.","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Trouble shooting","date":"2020-03-14T10:04:47.000Z","path":"wiki/framework7-template/dev-trouble-shooting/","text":"Trouble shooting This page is part of the App Framework Documentation The following points should be checked for trouble shooting: Cache is reset (could be done with npm run reset) No interferences with other files Only absolute paths used process.env allways considered as object with strings (process.env.ANY === &#39;true&#39;) All require() commands contain only strings and/or process.env[...] as variable Values from window.localStorage are parsed with JSON.parse() before usage Let us know if you have points to add. Debug modeDebug mode could be enabled with debug: true in the app config file. In code, whenever env.debug(...) is called, the input will be logged to debug.log file in the project folder.","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Requirements","date":"2020-03-13T10:04:47.000Z","path":"wiki/framework7-template/dev-requirements/","text":"Requirements This page is part of the App Framework Documentation App FrameworkBefore you develop for App Framework itself, you should be familiar how to work with App Framework in your own application. So, please follow the end user documentation first. Enable development modeTo inform end users about wrong App Framework usage (forking instead of installing as a module), there is an error message on each script call. For App Framework development, you have to create an empty file .enable-dev-mode in the project folder to suppress this warning.","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Folder structure","date":"2020-03-12T10:04:47.000Z","path":"wiki/framework7-template/dev-folder-structure/","text":"Folder structure This page is part of the App Framework Documentation 1234567891011121314151617181920├── .git/ # Git managed folder (do not modify)├── build/ # Latest build files├── client/ # Client code files├── demo/ # Demo App files├── design/ # Design templates (PDF and PPTX)├── docs/ # Documentation files (configuration.md is updated on each build)├── media/ # Graphics for documentation and promotion├── node_modules/ # Installed node modules (do not modify)├── scripts/ # Scripts and supporting files├── snapshots/ # Snapshot files├── vendor/ # Vendor files├── .babelrc # Babel configuration file├── .gitignore # List of ignored files for Git commits├── CHANGELOG.md # Release changelog├── config-scheme.json # Scheme for any application configuration file├── DEVELOPMENT.md # Development documentation main page├── DOCUMENTATION # End user documentation main page├── LICENSE # App Framework license file (year is updated on each build)├── package.json # App Framework project information└── README.md # Introduction, Features, Demo App, Documentation link","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Coding rules","date":"2020-03-12T10:04:47.000Z","path":"wiki/framework7-template/dev-coding-rules/","text":"Coding rules This page is part of the App Framework Documentation The following rules should be followed for all changes. Please keep in mind that the current code base could still look different in some cases. File namingAll folder, files and its extensions should be named lowercase, hyphen-type and only with numbers and alphabetic characters. Example: folder/sub-folder/file-in-sub-folder.js File structureIn general, the file structure should be as following: Purpose as notice Strict mode declaration Used modules local modules, sorted by path name npm modules, sorted by name Single steps Execution Example: 1234567891011121314151617181920212223// Purpose: Demonstration file for the development documentation&apos;use strict&apos;// Require moduleslet moduleA = require(&apos;./aFolder/aModule&apos;)let moduleC = require(&apos;./aFolder/cModule&apos;)let moduleB = require(&apos;./bFolder/bModule&apos;)let lodash = require(&apos;lodash&apos;)// Define single stepsfunction stepA (callback) &#123; ... callback()&#125;function stepB () &#123; ...&#125;// Run scriptstepA(function () &#123; stepB()&#125;) CommentsAll logic code blocks should be commented well with // ... before. Example: 1234567891011121314// Define list with nameslet names = [&apos;Tom&apos;, &apos;Susi&apos;, &apos;Aaron&apos;]// List with names is an arrayif (Array.isArray(names)) &#123; // Loop list with names for (let n = 0; n &lt; names.length; n++) &#123; // Print name to console console.log(&apos;Name no. &apos; + (n + 1) + &apos; is &apos; + names[n]) &#125;// List with names is no array&#125; else &#123; // Print error to console console.error(&apos;List with names is no array&apos;)&#125; All disabled code blocks for tests should be commented out with /* ... */. All additional code blocks for tests should be indicated with /* test */. Example: 123456// Define list with names/*let names = [&apos;Tom&apos;, &apos;Susi&apos;, &apos;Aaron&apos;]*/let names = &apos;everything but no array&apos; /* test */... Airbnb JavaScript rulesAll code is checked according Airbnb JavaScript rules (but without semicolons) before each build. Naming in code Variables: noun, self-explaining, camelCase (userList, userListSorted) Functions: verb, self-explaining, camelCase (deleteUser, sortUserList) Classes: noun, self-explaining, camelCase, first letter uppercase (User, UserList) Error messagesYou should always consider wrong input data and possible errors and react with an error message. In addition, you should provide a solution. If the root cause is not known or the user is not accountable, you should ask him “Please create an issue on GitHub”. Script filesAll scripts, mainly called by npm run ..., should indicate the steps by a status alert, shown in the command line tool. Further output should be avoided. Therefore, you could use the scripts/alert.js function with let alert = require(&#39;./alert&#39;). Use alert(&#39;&lt;step&gt; ongoing - please wait ...&#39;) to indicate the begin of each step Use alert(&#39;&lt;step&gt; done.&#39;) to indicate the successful end of each step Use alert(&#39;&lt;step&gt; failed. &lt;solution&gt;&#39;, &#39;exit&#39;) to indicate the unsuccessful end of each step and exit further script execution Use alert(&#39;&lt;step&gt; failed.&#39;, &#39;issue&#39;) as a shorthand to indicate the unsuccessful end of each step, exit further script execution and attach a request to open an issue on GitHub Example: 1234567891011121314151617181920212223242526272829303132333435// Purpose: Demonstration file for alerts in script files&apos;use strict&apos;// Require moduleslet alert = require(&apos;./alert&apos;)// Define single stepsfunction stepA (callback) &#123; alert(&apos;StepA ongoing - please wait ...&apos;) ... if (success) &#123; alert(&apos;StepA done.&apos;) callback() &#125; else &#123; alert(&apos;StepA failed. Please do this or that.&apos;, &apos;error&apos;) &#125;&#125;function stepB (callback) &#123; alert(&apos;StepB ongoing - please wait ...&apos;) ... if (success) &#123; alert(&apos;StepB done.&apos;) callback() &#125; else &#123; alert(&apos;StepB failed.&apos;, &apos;issue&apos;) &#125;&#125;// Run scriptstepA(function () &#123; stepB(function () &#123; alert(&apos;&lt;script objective&gt; done.&apos;) &#125;)&#125;)","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Design your application","date":"2020-03-11T10:04:47.000Z","path":"wiki/framework7-template/design/","text":"Design your application This page is part of the App Framework Documentation Paper and pencil Use our printable smartphone template to sketch your application Use our printable icon template to sketch your application icon Icon creationUse our Power Point icon template to create your application icon. Select all elements, right click, save as image, save as app/icon.png. Design guidelines For UI components: http://v1.framework7.io/vue For iOS: https://developer.apple.com/ios/human-interface-guidelines For Material: https://material.io/guidelines/","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Deploy your application","date":"2020-03-10T10:04:47.000Z","path":"wiki/framework7-template/deploy/","text":"Deploy your application This page is part of the App Framework Documentation App Framework does many adjustments in the background to enable you to deploy your App easily as Web App or as native App. So you could start fast and become professional later on without any change. But what are the differences? Comparison between Web App and Native App &nbsp; Web App Native App Installation Are running in the device browser and could be pinned to the homescreen. Are installed from an App Store or manually to the device (Android only). Performance Reload on reopen, but could be cached for offline usage. Offline warning. Kept in runtime of the device, smoother usage. No offline warning. Capability Only browser features. Access to the device hardware and OS features. Deployment In seconds. Additional native build plus approval process, which takes some time and could be refused at the Apple App Store. Costs Firebase hosting service is free for small apps. Apple App Store requires developer program (around 99€ per year), Google Play store requires registration fee (around 25 USD once). For selling apps, Apple and Google charge around 30% of the sales. Promotion All regular ways. All regular ways plus special promotions and user ratings in the store. Deployment to a FTP server (Web App) Run npm run ftp to deploy your latest build to your FTP server, on first call, the config file ftp-config.json is created automatically and you have to update it with your FTP server data For rollback, run npm run ftp -- --version x.y.z Deployment to Firebase Hosting (Web App) Run npm run firebase to deploy your latest build, database rules and storage rules to Firebase Hosting Run npm run database to deploy your latest build database rules to Firebase Run npm run storage to deploy your latest build storage rules to Firebase Run npm run hosting to deploy your latest build static files to Firebase For rollback, run all the commands above and extend with -- --version x.y.z or use the Firebase Console Deployment to the Apple App Store (native App)Requirements You need a Mac with macOS and installed Xcode (free) You need to sign to the Apple developer program (around 99€ per year) Preparation Create a production certificate in iTunes Connect, download and install it on your Mac Create a distribution provisioning profile in iTunes Connect, download and install it on your Mac Create a new App in iTunes Connect Configure the SKU from iTunes Connect in the configuration file as appStoreId Deployment You need to prepare the publishing in iTunes Connect Run npm run xcode to create a project file for Xcode, based on Cordova Make screenshots on the biggest iPhone (you will need them in iTunes Connect later on) Deactivate automatic managed signing, select your certificate and provisioning profiles created before Select the Generic iOS Device Create an archive (Product &gt; Archive) of the Xcode project and upload it to iTunes Connect Send your App in iTunes Connect for the review to Apple Rollback For rollback, run npm run xcode -- --version x.y.z or use iTunes Connect Deployment to the Google Play Store (native App)Requirements You need to install the Android Studio You need to register at the Google Play Developer Console (around 25 USD once) Preparation Create a new App in the Google Play Developer Console Configure the app ID in the configuration file as playStoreId Deployment Run npm run studio to create a project file for Android Studio, based on Cordova Select your project and confirm Gradle sync Make screenshots, you will need them later in the Google Play Developer Console Generate signed APK Deploy your application from the Google Play Developer Console Rollback For rollback, run npm run studio -- --version x.y.z or use the Google Play Developer Console","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Global data object","date":"2020-03-09T04:04:47.000Z","path":"wiki/framework7-template/data-object/","text":"Global data object This page is part of the App Framework Documentation App Framework provides a global persistent data object for common used data or settings. The data object will be restored on each application reload and is accessible in any Vue hook created or later. With App Framework v1.13.2 or laterSave data Template: &lt;f7-button @click=&quot;$db(&#39;main.sub&#39;, &#39;value&#39;)&quot;&gt;Save data&lt;/f7-button&gt; Script: this.$db(&#39;main.sub&#39;, &#39;value&#39;) Get data Template: 1&#123;&#123;$db(&apos;main.sub&apos;)&#125;&#125; Script: 1this.$db(&apos;main.sub&apos;) Remove data Template: &lt;f7-button @click=&quot;$db(&#39;main.sub&#39;, null)&quot;&gt;Remove data&lt;/f7-button&gt; Script: this.$db(&#39;main.sub&#39;, null) Notesmain.sub mean the paths within the data object. With a point, you can realize nested objects. Example: 12345&#123; \"main\": &#123; \"sub\": \"value\" &#125;&#125; With App Framework v1.12 or laterSave data Template: @click1- Script: ```this.$save(&apos;main.sub&apos;, &apos;value&apos;) Get data Template: 1- Script: ```this.$get.main.sub Remove data Template: @click1- Script: ```this.$remove(&apos;main.sub&apos;) With App Framework v1.11 or before To save data, use this.$root.saveData(path, value) To remove data, use this.$root.removeData(path) To retrieve data, use this.$root.data.path The path must be a string, use a a point to nest data. Example: 12345created: function () &#123; this.$root.saveData('greeting', 'Hello!') this.$root.saveData('names', &#123;first: 'Jan', second: 'Tom', third: 'Sophie'&#125;) this.$root.removeData('names.second')&#125; Now, the data object will look like following: 1234567&#123; greeting: 'Hello!', names: &#123; first: 'Jan', third: 'Sophie' &#125;&#125; Example for the usage in templates: 1234567&lt;f7-block&gt; &lt;p&gt;UTC date: &#123;&#123;$root.data.dateString&#125;&#125;&lt;/p&gt; &lt;f7-buttons&gt; &lt;f7-button @click=\"$root.saveData('dateString', (new Date()).toUTCString())\"&gt;Update date&lt;/f7-button&gt; &lt;f7-button @click=\"$root.removeData('dateString')\"&gt;Remove date&lt;/f7-button&gt; &lt;/f7-buttons&gt;&lt;/f7-block&gt; Do not modify $root.data directly, because there wont be any update triggered.","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Cordova preferences","date":"2020-03-08T10:04:47.000Z","path":"wiki/framework7-template/cordova-preferences/","text":"Cordova preferences This page is part of the App Framework Documentation In the configuration file, you can apply custom Cordova preferences: 123&quot;cordovaPreferences&quot;: &#123; &quot;DisallowOverscroll&quot;: true&#125; You find an overview of available preferences at the Cordova documentation.","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Cordova plugins","date":"2020-03-07T10:04:47.000Z","path":"wiki/framework7-template/cordova-plugins/","text":"Cordova plugins This page is part of the App Framework Documentation ConfigurationApp Framework supports well the usage of Cordova / PhoneGap plugins. You just have to add them in the configuration file. Example with cordova-plugin-badge: 123useCordovaPlugins: [ &quot;cordova-plugin-badge&quot;] UsageYou can use the plugin now in any of your components. Example: 12345678&lt;script&gt; export default &#123; created: function () &#123; // Set badge to 10 window.cordova.plugins.notification.badge.set(10) &#125; &#125;&lt;/script&gt; Take care to use window. to access any plugin. Plugin repositoryYou find a list of available plugins here: https://cordova.apache.org/plugins Default pluginsBy default, cordova-plugin-whitelist and cordova-plugin-statusbar are included in the build. To simplify the usage, App Framework provides you an easier way to manipulate the status bar - please read the chapter Status bar style for details. AvailabilityCordova plugins are only available in native applications or emulators, in the browser, they are undefined.","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Configuration options","date":"2020-03-06T10:04:47.000Z","path":"wiki/framework7-template/configuration/","text":"Configuration options This page is part of the App Framework Documentation Configuration optionsConfigure your application easily in the app/config.json file. For details, please read the Workflow section. Option Allowed Default title string My App defaultLanguage /^[a-z]{2}$/ en defaultLanguageFallback boolean false theme ios, material, ios-material, material-ios material color /^[a-z]+$/ indigo layout default, white, dark default statusbarVisibility boolean true statusbarTextColor black, white white statusbarBackgroundColor /^#[0-9a-f]{6}$/i #000000 iconBackgroundColor /^#[0-9a-f]{6}$/i #ffffff useIconFonts object &nbsp;&nbsp;&nbsp;framework7 boolean false &nbsp;&nbsp;&nbsp;material boolean false &nbsp;&nbsp;&nbsp;ion boolean false &nbsp;&nbsp;&nbsp;fontawesome boolean false limitApplicationWidth /^[0-9]+$/ 320 limitApplicationHeight /^[0-9]+$/ 570 limitedSizeBodyBackgroundColor /^#[0-9a-f]{6}$/i #333333 showPhoneFrameOnDesktop boolean true phoneFrameBodyBackgroundColor /^#[0-9a-f]{6}$/i #fafafa framework7parameters object {} materialSubnavbarFix boolean true restoreHistory boolean true restoreComponentData boolean true completeRoutesFile boolean true firebase object &nbsp;&nbsp;&nbsp;apiKey string &nbsp;&nbsp;&nbsp;authDomain string &nbsp;&nbsp;&nbsp;databaseURL string &nbsp;&nbsp;&nbsp;storageBucket string &nbsp;&nbsp;&nbsp;projectId string &nbsp;&nbsp;&nbsp;allowEmailLogin boolean false &nbsp;&nbsp;&nbsp;allowEmailRegistration boolean false devFirebase object &nbsp;&nbsp;&nbsp;deployDevRulesOnTesting boolean false &nbsp;&nbsp;&nbsp;apiKey string &nbsp;&nbsp;&nbsp;authDomain string &nbsp;&nbsp;&nbsp;databaseURL string &nbsp;&nbsp;&nbsp;storageBucket string &nbsp;&nbsp;&nbsp;projectId string &nbsp;&nbsp;&nbsp;allowEmailLogin boolean false &nbsp;&nbsp;&nbsp;allowEmailRegistration boolean false loginRequiredForAllPages boolean false appStoreId string playStoreId string useCordovaPlugins array [] cordovaPreferences object {“DisallowOverscroll”:true} resetLocalStorageOnVersionChange boolean false preloadImages boolean true buildSourcemaps boolean false editorConfig object {“root”:”true”,”[*]”:null,”indent_style”:”space”,”indent_size”:”2”,”charset”:”utf-8”,”trim_trailing_whitespace”:”true”,”insert_final_newline”:”true”,”end_of_line”:”lf”,”max_line_length”:”null”} eslint object &nbsp;&nbsp;&nbsp;extends airbnb, standard airbnb &nbsp;&nbsp;&nbsp;rules object {“semi”:[“error”,”never”]} fixCodeOnTest boolean true fixCodeOnBuild boolean true devServerPort /^[0-9]{4}$/ 8080 gitignore object {} npmignore object {} debug boolean false","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"CLI commands","date":"2020-03-05T10:04:47.000Z","path":"wiki/framework7-template/cli-commands/","text":"CLI commands This page is part of the App Framework Documentation Setup npm install to install App Framework and setup the project folder npm update to update App Framework to the latest sub version Testing npm run dev to start the development server CTRL + C to stop the development server npm run ios to open an iOS emulator with a development build npm run android to open an Android emulator with a development build Building npm run patch to build after bug-fixes and improvements npm run minor to build after adding new functionality npm run major to build after backward-capability breaking changes Deployment npm run firebase to deploy rules and static files to Firebase npm run database to deploy database rules to Firebase npm run storage to deploy storage rules to Firebase npm run hosting to deploy static files to Firebase npm run ftp to deploy static files to your FTP server npm run xcode to deploy static files as iOS Xcode project npm run studio to deploy static files as Android Studio project Backup npm run backup to create snapshots of the Firebase database and user list npm run snapshot to create a snapshot of your project folder","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Build your application","date":"2020-03-04T10:04:47.000Z","path":"wiki/framework7-template/build/","text":"Build your application This page is part of the App Framework Documentation To deploy your application you need to build it before. App Framework makes it quite easy for you, bumps the version, compiles the scripts and merges them together. Your logo is used to create many icons and launch screen graphics and at the end all files are compressed to save bandwidth. GZIP compression will be done in addition after deployment to Firebase hosting. Each build command will update the build folder on success. Run npm run patch after bug-fixes and improvements (version bump to x.y.z+1) Run npm run minor after adding new functionality (version bump to x.y+1.0) Run npm run major after breaking backward-capability (version bump to x+1.0.0)","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Backup your project","date":"2020-03-03T10:04:47.000Z","path":"wiki/framework7-template/backup/","text":"Backup your project This page is part of the App Framework Documentation Backup Firebase dataRun npm run backup to save the Firebase database content and user list as JSON files to the snapshots folder. Backup project folderRun npm run snapshot to create a snapshot of all important project files to the snapshots folder. Backup frequentlyBackup your project folder frequently by copying the snapshots folder to any external drive or cloud and/or pushing and synchronizing your changes to GitHub.","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"Application style","date":"2020-03-02T10:04:47.000Z","path":"wiki/framework7-template/application-style/","text":"Application style This page is part of the App Framework Documentation ConfigurationYou can set the following style options in the configuration file: 123456789theme: &apos;material&apos;, // &apos;ios&apos;, &apos;material&apos;, &apos;ios-material&apos; or &apos;material-ios&apos;color: &apos;indigo&apos;, // Any theme color namelayout: &apos;default&apos; // &apos;default&apos;, &apos;white&apos; or &apos;dark&apos;limitApplicationWidth: 320, // PixellimitApplicationHeight: 570, // PixellimitedSizeBodyBackgroundColor: &apos;#333333&apos;, // HEX color codeshowPhoneFrameOnDesktop: true, // true or falsephoneFrameBodyBackgroundColor: &apos;#fafafa&apos;, // HEX color codeframework7parameters: &#123;&#125; // Object, see Framework7 documentation If you want to change the theme during runtime, you need to use ios-material or material-ios as value in the configuration. With ios-material, the default theme will be ios, but you are able to change the theme to material, with material-ios in the configuration vice versa. You will reduce the build size if you configure either ios or material. Find more information about all theme color and layout options here. Runtime modificationYou can modify the style options during runtime in any Vue hook created or later: 12345created: function () &#123; this.$root.theme = &apos;material&apos; this.$root.color = &apos;indigo&apos; this.$root.layout = &apos;default&apos;&#125; The current style is restored after application restart and overwrites the configuration.","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]},{"title":"App component","date":"2020-03-01T10:04:47.000Z","path":"wiki/framework7-template/app-component/","text":"App component This page is part of the App Framework Documentation The structure of your application is defined in a Framework7-Vue component, so you should be familar with Vue.js single file components as well as Framework7-Vue. The following content of the app/app.vue file is sufficient for a basic application: 1234567&lt;template&gt; &lt;div id=&quot;app&quot;&gt; &lt;f7-views&gt; &lt;f7-view main url=&quot;/home/&quot; navbar-through :dynamic-navbar=&quot;$theme.ios&quot; /&gt; &lt;/f7-views&gt; &lt;/div&gt;&lt;/template&gt; If you want to assign CSS declarations to your complete application, you should do it in the app component: 1234567 ...&lt;/template&gt;&lt;style&gt; .navbar &#123; background-color: #5dade2; &#125; &lt;/style&gt; And to add functionality, you use the script block: 12345678910 ...&lt;script&gt; export default &#123; methods: &#123; onF7Init: function () &#123; this.$f7.alert(&apos;App is mounted!&apos;) &#125; &#125; &#125;&lt;/script&gt; In Framework7-Vue documentation, the app component is described as the #app div - you will find all details there. Babel / ES2015 is supported in the app component. You can pass custom Framework7 parameters to your application in the configuration file. Example: 123&quot;framework7parameters&quot;: &#123; &quot;swipePanel&quot;: &quot;left&quot;&#125;","tags":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/tags/Framework7/"}],"categories":[{"name":"Framework7","slug":"Framework7","permalink":"https://search-site.github.io/categories/Framework7/"}]}]}